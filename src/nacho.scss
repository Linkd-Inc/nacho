@import "./mixins";

.no-wrap {
  flex-wrap: nowrap !important;
}

.grow {
  flex-grow: 1;
}

.row {
  @include row();
}

.row.reverse {
  flex-direction: row-reverse;
}

.col {
  @include col();
}

.col.reverse {
  flex-direction: column-reverse;
}

$size-list: (
  xs: xsmall,
  sm: small,
  md: medium,
  lg: large,
);

@each $size, $fullsize in $size-list {
  @media only screen and (min-width: map-get($breakpoints, $fullsize)) {

    .col-#{$size} {
      @include col-siz;
    }

    .col-#{$size},
    .col-#{$size}-1,
    .col-#{$size}-2,
    .col-#{$size}-3,
    .col-#{$size}-4,
    .col-#{$size}-5,
    .col-#{$size}-6,
    .col-#{$size}-7,
    .col-#{$size}-8,
    .col-#{$size}-9,
    .col-#{$size}-10,
    .col-#{$size}-11,
    .col-#{$size}-12 {
      @include col-size-num();
    }

    @for $i from 1 through 12 {
      .col-#{$size}-#{$i} {
        @include col-size($i);
      }

      .col-#{$size}-offset-#{$i} {
        @include col-size-offset($i);
      }
    }

    .start-#{$size} {
      @include start-size();
    }

    .center-#{$size} {
      @include center-size();
    }

    .end-#{$size} {
      @include end-size();
    }

    .top-#{$size} {
      @include top-size();
    }

    .middle-#{$size} {
      @include middle-size();
    }

    .bottom-#{$size} {
      @include bottom-size();
    }

    .around-#{$size} {
      @include around-size();
    }

    .between-#{$size} {
      @include between-size();
    }

    .align-top-#{$size} {
      @include align-top-size();
    }

    .align-bottom-#{$size} {
      @include align-bottom-size();
    }

    .align-center-#{$size} {
      @include align-center-size();
    }

    .align-around-#{$size} {
      @include align-around-size();
    }

    .align-between-#{$size} {
      @include align-between-size();
    }

    .first-#{$size} {
      @include first-size();
    }

    .last-#{$size} {
      @include last-size();
    }

    .midway-#{$size} {
      @extend .middle-#{$size};
      @extend .center-#{$size};
    }

    .no-wrap-#{$size} {
      @include no-wrap(!important);
    }

    .wrap-#{$size} {
      @include wrap(!important);
    }

    .row-#{$size} {
      @include row();
    }

    .col-#{$size} {
      @include col();
    }
  }
}

.col-padding {
  padding-right: 1rem;
  padding-left: 1rem;
}

// Container sizing classes
@media #{$small-up} {
  .container {
    width: strip-units(map-get($breakpoints, small)) - 2 rem;
  }
}

@media #{$medium-up} {
  .container {
    width: strip-units(map-get($breakpoints, medium)) - 1 rem;
  }
}

@media #{$large-up} {
  .container {
    width: strip-units(map-get($breakpoints, large)) - 1 rem;
  }
}

// Visibility Classes
// TODO: Make this generated by a loop
.show-for-xsmall-only, .show-for-small-only, .show-for-small, .show-for-medium-only, .show-for-medium, .show-for-large-only, .show-for-large {
  @include dont-show();
}

@media #{$xsmall-only} {
  .hide-for-xsmall-only {
    @include dont-show(!important);
  }
  .show-for-xsmall-only {
    @include show(!important);
  }
}

@media #{$small-only} {
  .hide-for-small-only {
    @include dont-show(!important);
  }
  .show-for-small-only {
    @include show(!important);
  }
}

@media #{$small-down} {
  .hide-for-small {
    @include dont-show(!important);
  }
  .show-for-small {
    @include show(!important);
  }
}

@media #{$medium-only} {
  .hide-for-medium-only {
    @include dont-show(!important);
  }
  .show-for-medium-only {
    @include show(!important);
  }
}

@media #{$medium-down} {
  .hide-for-medium {
    @include dont-show(!important);
  }
  .show-for-medium {
    @include show(!important);
  }
}

@media #{$large-only} {
  .hide-for-large-only {
    @include dont-show(!important);
  }
  .show-for-large-only {
    @include show(!important);
  }
}

@media #{$large-down} {
  .hide-for-large {
    @include dont-show(!important);
  }
  .show-for-large {
    @include show(!important);
  }
}

.show-for-landscape,
.hide-for-portrait {
  @include show();
}

.hide-for-landscape,
.show-for-portrait {
  @include dont-show();
}

@media screen and (orientation: landscape) {
  .show-for-landscape,
  .hide-for-portrait {
    @include show(!important);
  }
}

@media screen and (orientation: portrait) {
  .show-for-landscape,
  .hide-for-portrait {
    @include dont-show(!important);
  }
}

@media screen and (orientation: portrait) {
  .hide-for-landscape,
  .show-for-portrait {
    @include show(!important);
  }
}

@media screen and (orientation: landscape) {
  .hide-for-landscape,
  .show-for-portrait {
    @include dont-show(!important);
  }
}
